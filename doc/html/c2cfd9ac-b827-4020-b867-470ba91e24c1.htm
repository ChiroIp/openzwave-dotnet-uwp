<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Welcome to the OpenZWave for .NET and Windows Universal</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Welcome" /><meta name="Microsoft.Help.Id" content="c2cfd9ac-b827-4020-b867-470ba91e24c1" /><meta name="Description" content="Welcome to the openzwave-dotnet-uwp wiki!" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c2cfd9ac-b827-4020-b867-470ba91e24c1.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="c2cfd9ac-b827-4020-b867-470ba91e24c1.htm" title="Welcome to the OpenZWave for .NET and Windows Universal" tocid="c2cfd9ac-b827-4020-b867-470ba91e24c1">Welcome to the OpenZWave for .NET and Windows Universal</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="06913e91-c56b-46ad-94e6-f663945e448b.htm" title="CompilingOpenZWave" tocid="06913e91-c56b-46ad-94e6-f663945e448b">CompilingOpenZWave</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e332b1e2-b3c4-4ab0-bcda-53cf9e70663b.htm" title="Version History" tocid="e332b1e2-b3c4-4ab0-bcda-53cf9e70663b">Version History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_OpenZWave.htm" title="OpenZWave" tocid="N_OpenZWave">OpenZWave</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Welcome to the OpenZWave for .NET and Windows Universal</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>Welcome to the openzwave-dotnet-uwp wiki!</p><p>For more full examples, check out the sample apps.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Installing</span></div><div id="ID1RBSection" class="collapsibleSection"><p>Package can be referenced via NuGet:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAGAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">PM&gt; Install-Package OpenZWave -Pre</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAGAAA");</script><p>Note that .NET applications must be set to compile for x86 and not AnyCPU or x64 (this does not apply to UWP apps which also supports x64 and ARM).</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Deploying configuration files</span></div><div id="ID2RBSection" class="collapsibleSection"><p>If you are using NuGet, ignore this.</p><p>
          It's important that you deploy all the XML configuration files from <span class="code">\open-zwave\config\**\*.*</span> into the <span class="code">/config/</span> folder of your app. The sample apps uses a <span class="code">DeployConfigFiles.targets</span> file to do this (via msbuild) by including this in your project:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAFAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Import</span> <span class="highlight-xml-attribute-name">Project</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"DeployConfigFiles.targets"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAFAAA");</script><p>
          Note, that if you use the nuget package this will automatically happen, as this .targets file is automatically included.
        </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Initializing the OpenZWave Library</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Initialize</span>
ZWMOptions.Instance.Initialize(); <span class="highlight-comment">//Configure default options</span>
ZWMOptions.Instance.Lock();       <span class="highlight-comment">//Options must be locked before using</span>
ZWManager.Instance.Initialize();  <span class="highlight-comment">//Start up the manager</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEAAA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Opening a serial port (.NET)</span></div><div id="ID4RBSection" class="collapsibleSection"><p>Using .NET: </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> availablePorts = System.IO.Ports.SerialPort.GetPortNames();
<span class="highlight-keyword">var</span> serialPort = availablePorts.First().Id; <span class="highlight-comment">//Adjust to pick the right port for your usb stick</span>
ZWManager.Instance.AddDriver(serialPort); <span class="highlight-comment">//Add the serial port (you can have multiple!)</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Opening a serial port (UWP)</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
          In UWP apps you must first enable the Serial Port capability. To do this, you must add the following section to the Capabilities part of the `Package.appxmanifest`:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Capabilities</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">DeviceCapability</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"serialcommunication"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Device</span> <span class="highlight-xml-attribute-name">Id</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"any"</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Function</span> <span class="highlight-xml-attribute-name">Type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"name:serialPort"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Device</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">DeviceCapability</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Capabilities</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADACAAA");</script><p>
          Next is finding the serial port using the DeviceInformation APIs, and then add the driver
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Hook up the serial port</span>
<span class="highlight-keyword">var</span> serialPortSelector = Windows.Devices.SerialCommunication.SerialDevice.GetDeviceSelector();
<span class="highlight-keyword">var</span> devices = <span class="highlight-keyword">await</span> DeviceInformation.FindAllAsync(serialPortSelector);
<span class="highlight-keyword">var</span> serialPort = devices.First().Id; <span class="highlight-comment">//Adjust to pick the right port for your usb stick</span>
ZWManager.Instance.AddDriver(serialPort); <span class="highlight-comment">//Add the serial port (you can have multiple!)</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACAAA");</script><p><em><strong>Note</strong>: If you are running on IoT Core, an OpenZWave-to-AllJoyn bridge is installed by default, and might already be using the serial port. If that is the case, stop the OpenZWave-AllJoyn Bridge service first.</em></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />
        Listening for devices
      </span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">ZWManager.Instance.NotificationReceived += OnNodeNotification; <span class="highlight-comment">//Start listening for node events</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>
          The rest is in the Notification handler. Every time a node is found, changed, removed etc.
          an event is reported here, including responses to commands you send. Nodes are identified
          by the HomeID (one per usb controller connected), and by the NodeID. You use these two values
          to uniquely identify a node on your network, and can then perform operations like changing
          properties via the ZWManager instance.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> OnNodeNotification(ZWManager manager, NotificationReceivedEventArgs e)
{
   <span class="highlight-keyword">var</span> notification = e.Notification;
   <span class="highlight-keyword">var</span> homeID = notification.HomeId;
   <span class="highlight-keyword">var</span> nodeId = notification.NodeId;
   <span class="highlight-keyword">var</span> type = notification.Type;
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="e332b1e2-b3c4-4ab0-bcda-53cf9e70663b.htm">Version History</a></div></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>